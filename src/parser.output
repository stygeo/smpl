Terminals which are not used

   ERROR_TOKEN
   THEN
   END


State 48 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement_list statement
    3               | /* empty */

    4 statement: END_STMT
    5          | expression END_STMT
    6          | PRINT expression END_STMT
    7          | INPUT identifier END_STMT
    8          | function_definition
    9          | if_statement
   10          | compound_statement
   11          | error END_STMT

   12 function_definition: DEF identifier OPEN_PAR CLOSE_PAR statement

   13 if_statement: IF OPEN_PAR expression CLOSE_PAR statement optional_else_statement

   14 optional_else_statement: ELSE statement
   15                        | /* empty */

   16 compound_statement: BEGIN_CS statement_list END_CS

   17 expression: equal_expression

   18 equal_expression: expression EQUAL assign_expression
   19                 | assign_expression

   20 assign_expression: identifier ASSIGN assign_expression
   21                  | concat_expression

   22 concat_expression: concat_expression CONCAT simple_expression
   23                  | simple_expression

   24 simple_expression: identifier
   25                  | string
   26                  | OPEN_PAR expression CLOSE_PAR

   27 identifier: ID

   28 string: STRING


Terminals, with rules where they appear

$end (0) 0
error (256) 11
ERROR_TOKEN (258)
IF (259) 13
ELSE (260) 14
PRINT (261) 6
INPUT (262) 7
ASSIGN (263) 20
EQUAL (264) 18
CONCAT (265) 22
END_STMT (266) 4 5 6 7 11
OPEN_PAR (267) 12 13 26
CLOSE_PAR (268) 12 13 26
BEGIN_CS (269) 16
END_CS (270) 16
DEF (271) 12
THEN (272)
END (273)
ID (274) 27
STRING (275) 28


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
program (22)
    on left: 1, on right: 0
statement_list (23)
    on left: 2 3, on right: 1 2 16
statement (24)
    on left: 4 5 6 7 8 9 10 11, on right: 2 12 13 14
function_definition (25)
    on left: 12, on right: 8
if_statement (26)
    on left: 13, on right: 9
optional_else_statement (27)
    on left: 14 15, on right: 13
compound_statement (28)
    on left: 16, on right: 10
expression (29)
    on left: 17, on right: 5 6 13 18 26
equal_expression (30)
    on left: 18 19, on right: 17
assign_expression (31)
    on left: 20 21, on right: 18 19 20
concat_expression (32)
    on left: 22 23, on right: 21 22
simple_expression (33)
    on left: 24 25 26, on right: 22 23
identifier (34)
    on left: 27, on right: 7 12 20 24
string (35)
    on left: 28, on right: 25


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (statement_list)

    program         go to state 1
    statement_list  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: statement_list .
    2 statement_list: statement_list . statement

    error     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    INPUT     shift, and go to state 7
    END_STMT  shift, and go to state 8
    OPEN_PAR  shift, and go to state 9
    BEGIN_CS  shift, and go to state 10
    DEF       shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    $end  reduce using rule 1 (program)

    statement            go to state 14
    function_definition  go to state 15
    if_statement         go to state 16
    compound_statement   go to state 17
    expression           go to state 18
    equal_expression     go to state 19
    assign_expression    go to state 20
    concat_expression    go to state 21
    simple_expression    go to state 22
    identifier           go to state 23
    string               go to state 24


state 3

    0 $accept: program $end .

    $default  accept


state 4

   11 statement: error . END_STMT

    END_STMT  shift, and go to state 25


state 5

   13 if_statement: IF . OPEN_PAR expression CLOSE_PAR statement optional_else_statement

    OPEN_PAR  shift, and go to state 26


state 6

    6 statement: PRINT . expression END_STMT

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    expression         go to state 27
    equal_expression   go to state 19
    assign_expression  go to state 20
    concat_expression  go to state 21
    simple_expression  go to state 22
    identifier         go to state 23
    string             go to state 24


state 7

    7 statement: INPUT . identifier END_STMT

    ID  shift, and go to state 12

    identifier  go to state 28


state 8

    4 statement: END_STMT .

    $default  reduce using rule 4 (statement)


state 9

   26 simple_expression: OPEN_PAR . expression CLOSE_PAR

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    expression         go to state 29
    equal_expression   go to state 19
    assign_expression  go to state 20
    concat_expression  go to state 21
    simple_expression  go to state 22
    identifier         go to state 23
    string             go to state 24


state 10

   16 compound_statement: BEGIN_CS . statement_list END_CS

    $default  reduce using rule 3 (statement_list)

    statement_list  go to state 30


state 11

   12 function_definition: DEF . identifier OPEN_PAR CLOSE_PAR statement

    ID  shift, and go to state 12

    identifier  go to state 31


state 12

   27 identifier: ID .

    $default  reduce using rule 27 (identifier)


state 13

   28 string: STRING .

    $default  reduce using rule 28 (string)


state 14

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


state 15

    8 statement: function_definition .

    $default  reduce using rule 8 (statement)


state 16

    9 statement: if_statement .

    $default  reduce using rule 9 (statement)


state 17

   10 statement: compound_statement .

    $default  reduce using rule 10 (statement)


state 18

    5 statement: expression . END_STMT
   18 equal_expression: expression . EQUAL assign_expression

    EQUAL     shift, and go to state 32
    END_STMT  shift, and go to state 33


state 19

   17 expression: equal_expression .

    $default  reduce using rule 17 (expression)


state 20

   19 equal_expression: assign_expression .

    $default  reduce using rule 19 (equal_expression)


state 21

   21 assign_expression: concat_expression .
   22 concat_expression: concat_expression . CONCAT simple_expression

    CONCAT  shift, and go to state 34

    $default  reduce using rule 21 (assign_expression)


state 22

   23 concat_expression: simple_expression .

    $default  reduce using rule 23 (concat_expression)


state 23

   20 assign_expression: identifier . ASSIGN assign_expression
   24 simple_expression: identifier .

    ASSIGN  shift, and go to state 35

    $default  reduce using rule 24 (simple_expression)


state 24

   25 simple_expression: string .

    $default  reduce using rule 25 (simple_expression)


state 25

   11 statement: error END_STMT .

    $default  reduce using rule 11 (statement)


state 26

   13 if_statement: IF OPEN_PAR . expression CLOSE_PAR statement optional_else_statement

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    expression         go to state 36
    equal_expression   go to state 19
    assign_expression  go to state 20
    concat_expression  go to state 21
    simple_expression  go to state 22
    identifier         go to state 23
    string             go to state 24


state 27

    6 statement: PRINT expression . END_STMT
   18 equal_expression: expression . EQUAL assign_expression

    EQUAL     shift, and go to state 32
    END_STMT  shift, and go to state 37


state 28

    7 statement: INPUT identifier . END_STMT

    END_STMT  shift, and go to state 38


state 29

   18 equal_expression: expression . EQUAL assign_expression
   26 simple_expression: OPEN_PAR expression . CLOSE_PAR

    EQUAL      shift, and go to state 32
    CLOSE_PAR  shift, and go to state 39


state 30

    2 statement_list: statement_list . statement
   16 compound_statement: BEGIN_CS statement_list . END_CS

    error     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    INPUT     shift, and go to state 7
    END_STMT  shift, and go to state 8
    OPEN_PAR  shift, and go to state 9
    BEGIN_CS  shift, and go to state 10
    END_CS    shift, and go to state 40
    DEF       shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    statement            go to state 14
    function_definition  go to state 15
    if_statement         go to state 16
    compound_statement   go to state 17
    expression           go to state 18
    equal_expression     go to state 19
    assign_expression    go to state 20
    concat_expression    go to state 21
    simple_expression    go to state 22
    identifier           go to state 23
    string               go to state 24


state 31

   12 function_definition: DEF identifier . OPEN_PAR CLOSE_PAR statement

    OPEN_PAR  shift, and go to state 41


state 32

   18 equal_expression: expression EQUAL . assign_expression

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    assign_expression  go to state 42
    concat_expression  go to state 21
    simple_expression  go to state 22
    identifier         go to state 23
    string             go to state 24


state 33

    5 statement: expression END_STMT .

    $default  reduce using rule 5 (statement)


state 34

   22 concat_expression: concat_expression CONCAT . simple_expression

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    simple_expression  go to state 43
    identifier         go to state 44
    string             go to state 24


state 35

   20 assign_expression: identifier ASSIGN . assign_expression

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    assign_expression  go to state 45
    concat_expression  go to state 21
    simple_expression  go to state 22
    identifier         go to state 23
    string             go to state 24


state 36

   13 if_statement: IF OPEN_PAR expression . CLOSE_PAR statement optional_else_statement
   18 equal_expression: expression . EQUAL assign_expression

    EQUAL      shift, and go to state 32
    CLOSE_PAR  shift, and go to state 46


state 37

    6 statement: PRINT expression END_STMT .

    $default  reduce using rule 6 (statement)


state 38

    7 statement: INPUT identifier END_STMT .

    $default  reduce using rule 7 (statement)


state 39

   26 simple_expression: OPEN_PAR expression CLOSE_PAR .

    $default  reduce using rule 26 (simple_expression)


state 40

   16 compound_statement: BEGIN_CS statement_list END_CS .

    $default  reduce using rule 16 (compound_statement)


state 41

   12 function_definition: DEF identifier OPEN_PAR . CLOSE_PAR statement

    CLOSE_PAR  shift, and go to state 47


state 42

   18 equal_expression: expression EQUAL assign_expression .

    $default  reduce using rule 18 (equal_expression)


state 43

   22 concat_expression: concat_expression CONCAT simple_expression .

    $default  reduce using rule 22 (concat_expression)


state 44

   24 simple_expression: identifier .

    $default  reduce using rule 24 (simple_expression)


state 45

   20 assign_expression: identifier ASSIGN assign_expression .

    $default  reduce using rule 20 (assign_expression)


state 46

   13 if_statement: IF OPEN_PAR expression CLOSE_PAR . statement optional_else_statement

    error     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    INPUT     shift, and go to state 7
    END_STMT  shift, and go to state 8
    OPEN_PAR  shift, and go to state 9
    BEGIN_CS  shift, and go to state 10
    DEF       shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    statement            go to state 48
    function_definition  go to state 15
    if_statement         go to state 16
    compound_statement   go to state 17
    expression           go to state 18
    equal_expression     go to state 19
    assign_expression    go to state 20
    concat_expression    go to state 21
    simple_expression    go to state 22
    identifier           go to state 23
    string               go to state 24


state 47

   12 function_definition: DEF identifier OPEN_PAR CLOSE_PAR . statement

    error     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    INPUT     shift, and go to state 7
    END_STMT  shift, and go to state 8
    OPEN_PAR  shift, and go to state 9
    BEGIN_CS  shift, and go to state 10
    DEF       shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    statement            go to state 49
    function_definition  go to state 15
    if_statement         go to state 16
    compound_statement   go to state 17
    expression           go to state 18
    equal_expression     go to state 19
    assign_expression    go to state 20
    concat_expression    go to state 21
    simple_expression    go to state 22
    identifier           go to state 23
    string               go to state 24


state 48

   13 if_statement: IF OPEN_PAR expression CLOSE_PAR statement . optional_else_statement

    ELSE  shift, and go to state 50

    ELSE      [reduce using rule 15 (optional_else_statement)]
    $default  reduce using rule 15 (optional_else_statement)

    optional_else_statement  go to state 51


state 49

   12 function_definition: DEF identifier OPEN_PAR CLOSE_PAR statement .

    $default  reduce using rule 12 (function_definition)


state 50

   14 optional_else_statement: ELSE . statement

    error     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    INPUT     shift, and go to state 7
    END_STMT  shift, and go to state 8
    OPEN_PAR  shift, and go to state 9
    BEGIN_CS  shift, and go to state 10
    DEF       shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    statement            go to state 52
    function_definition  go to state 15
    if_statement         go to state 16
    compound_statement   go to state 17
    expression           go to state 18
    equal_expression     go to state 19
    assign_expression    go to state 20
    concat_expression    go to state 21
    simple_expression    go to state 22
    identifier           go to state 23
    string               go to state 24


state 51

   13 if_statement: IF OPEN_PAR expression CLOSE_PAR statement optional_else_statement .

    $default  reduce using rule 13 (if_statement)


state 52

   14 optional_else_statement: ELSE statement .

    $default  reduce using rule 14 (optional_else_statement)
