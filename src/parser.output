Terminals which are not used

   ERROR_TOKEN
   THEN
   END


State 24 conflicts: 1 reduce/reduce
State 53 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement_list statement
    3               | /* empty */

    4 statement: END_STMT
    5          | expression END_STMT
    6          | PRINT expression END_STMT
    7          | INPUT identifier END_STMT
    8          | function_definition
    9          | args
   10          | if_statement
   11          | compound_statement
   12          | error END_STMT

   13 function_definition: DEF identifier OPEN_PAR args CLOSE_PAR statement

   14 args: identifier
   15     | args COMMA identifier

   16 if_statement: IF OPEN_PAR expression CLOSE_PAR statement optional_else_statement

   17 optional_else_statement: ELSE statement
   18                        | /* empty */

   19 compound_statement: BEGIN_CS statement_list END_CS

   20 expression: equal_expression

   21 equal_expression: expression EQUAL assign_expression
   22                 | assign_expression

   23 assign_expression: identifier ASSIGN assign_expression
   24                  | concat_expression

   25 concat_expression: concat_expression CONCAT simple_expression
   26                  | simple_expression

   27 simple_expression: identifier
   28                  | string
   29                  | OPEN_PAR expression CLOSE_PAR

   30 identifier: ID

   31 string: STRING


Terminals, with rules where they appear

$end (0) 0
error (256) 12
ERROR_TOKEN (258)
IF (259) 16
ELSE (260) 17
PRINT (261) 6
INPUT (262) 7
ASSIGN (263) 23
EQUAL (264) 21
CONCAT (265) 25
END_STMT (266) 4 5 6 7 12
OPEN_PAR (267) 13 16 29
CLOSE_PAR (268) 13 16 29
BEGIN_CS (269) 19
END_CS (270) 19
DEF (271) 13
THEN (272)
END (273)
COMMA (274) 15
ID (275) 30
STRING (276) 31


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
program (23)
    on left: 1, on right: 0
statement_list (24)
    on left: 2 3, on right: 1 2 19
statement (25)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 13 16 17
function_definition (26)
    on left: 13, on right: 8
args (27)
    on left: 14 15, on right: 9 13 15
if_statement (28)
    on left: 16, on right: 10
optional_else_statement (29)
    on left: 17 18, on right: 16
compound_statement (30)
    on left: 19, on right: 11
expression (31)
    on left: 20, on right: 5 6 16 21 29
equal_expression (32)
    on left: 21 22, on right: 20
assign_expression (33)
    on left: 23 24, on right: 21 22 23
concat_expression (34)
    on left: 25 26, on right: 24 25
simple_expression (35)
    on left: 27 28 29, on right: 25 26
identifier (36)
    on left: 30, on right: 7 13 14 15 23 27
string (37)
    on left: 31, on right: 28


state 0

    0 $accept: . program $end

    $default  reduce using rule 3 (statement_list)

    program         go to state 1
    statement_list  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: statement_list .
    2 statement_list: statement_list . statement

    error     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    INPUT     shift, and go to state 7
    END_STMT  shift, and go to state 8
    OPEN_PAR  shift, and go to state 9
    BEGIN_CS  shift, and go to state 10
    DEF       shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    $end  reduce using rule 1 (program)

    statement            go to state 14
    function_definition  go to state 15
    args                 go to state 16
    if_statement         go to state 17
    compound_statement   go to state 18
    expression           go to state 19
    equal_expression     go to state 20
    assign_expression    go to state 21
    concat_expression    go to state 22
    simple_expression    go to state 23
    identifier           go to state 24
    string               go to state 25


state 3

    0 $accept: program $end .

    $default  accept


state 4

   12 statement: error . END_STMT

    END_STMT  shift, and go to state 26


state 5

   16 if_statement: IF . OPEN_PAR expression CLOSE_PAR statement optional_else_statement

    OPEN_PAR  shift, and go to state 27


state 6

    6 statement: PRINT . expression END_STMT

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    expression         go to state 28
    equal_expression   go to state 20
    assign_expression  go to state 21
    concat_expression  go to state 22
    simple_expression  go to state 23
    identifier         go to state 29
    string             go to state 25


state 7

    7 statement: INPUT . identifier END_STMT

    ID  shift, and go to state 12

    identifier  go to state 30


state 8

    4 statement: END_STMT .

    $default  reduce using rule 4 (statement)


state 9

   29 simple_expression: OPEN_PAR . expression CLOSE_PAR

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    expression         go to state 31
    equal_expression   go to state 20
    assign_expression  go to state 21
    concat_expression  go to state 22
    simple_expression  go to state 23
    identifier         go to state 29
    string             go to state 25


state 10

   19 compound_statement: BEGIN_CS . statement_list END_CS

    $default  reduce using rule 3 (statement_list)

    statement_list  go to state 32


state 11

   13 function_definition: DEF . identifier OPEN_PAR args CLOSE_PAR statement

    ID  shift, and go to state 12

    identifier  go to state 33


state 12

   30 identifier: ID .

    $default  reduce using rule 30 (identifier)


state 13

   31 string: STRING .

    $default  reduce using rule 31 (string)


state 14

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


state 15

    8 statement: function_definition .

    $default  reduce using rule 8 (statement)


state 16

    9 statement: args .
   15 args: args . COMMA identifier

    COMMA  shift, and go to state 34

    $default  reduce using rule 9 (statement)


state 17

   10 statement: if_statement .

    $default  reduce using rule 10 (statement)


state 18

   11 statement: compound_statement .

    $default  reduce using rule 11 (statement)


state 19

    5 statement: expression . END_STMT
   21 equal_expression: expression . EQUAL assign_expression

    EQUAL     shift, and go to state 35
    END_STMT  shift, and go to state 36


state 20

   20 expression: equal_expression .

    $default  reduce using rule 20 (expression)


state 21

   22 equal_expression: assign_expression .

    $default  reduce using rule 22 (equal_expression)


state 22

   24 assign_expression: concat_expression .
   25 concat_expression: concat_expression . CONCAT simple_expression

    CONCAT  shift, and go to state 37

    $default  reduce using rule 24 (assign_expression)


state 23

   26 concat_expression: simple_expression .

    $default  reduce using rule 26 (concat_expression)


state 24

   14 args: identifier .
   23 assign_expression: identifier . ASSIGN assign_expression
   27 simple_expression: identifier .

    ASSIGN  shift, and go to state 38

    EQUAL     reduce using rule 27 (simple_expression)
    CONCAT    reduce using rule 27 (simple_expression)
    END_STMT  reduce using rule 14 (args)
    END_STMT  [reduce using rule 27 (simple_expression)]
    $default  reduce using rule 14 (args)


state 25

   28 simple_expression: string .

    $default  reduce using rule 28 (simple_expression)


state 26

   12 statement: error END_STMT .

    $default  reduce using rule 12 (statement)


state 27

   16 if_statement: IF OPEN_PAR . expression CLOSE_PAR statement optional_else_statement

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    expression         go to state 39
    equal_expression   go to state 20
    assign_expression  go to state 21
    concat_expression  go to state 22
    simple_expression  go to state 23
    identifier         go to state 29
    string             go to state 25


state 28

    6 statement: PRINT expression . END_STMT
   21 equal_expression: expression . EQUAL assign_expression

    EQUAL     shift, and go to state 35
    END_STMT  shift, and go to state 40


state 29

   23 assign_expression: identifier . ASSIGN assign_expression
   27 simple_expression: identifier .

    ASSIGN  shift, and go to state 38

    $default  reduce using rule 27 (simple_expression)


state 30

    7 statement: INPUT identifier . END_STMT

    END_STMT  shift, and go to state 41


state 31

   21 equal_expression: expression . EQUAL assign_expression
   29 simple_expression: OPEN_PAR expression . CLOSE_PAR

    EQUAL      shift, and go to state 35
    CLOSE_PAR  shift, and go to state 42


state 32

    2 statement_list: statement_list . statement
   19 compound_statement: BEGIN_CS statement_list . END_CS

    error     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    INPUT     shift, and go to state 7
    END_STMT  shift, and go to state 8
    OPEN_PAR  shift, and go to state 9
    BEGIN_CS  shift, and go to state 10
    END_CS    shift, and go to state 43
    DEF       shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    statement            go to state 14
    function_definition  go to state 15
    args                 go to state 16
    if_statement         go to state 17
    compound_statement   go to state 18
    expression           go to state 19
    equal_expression     go to state 20
    assign_expression    go to state 21
    concat_expression    go to state 22
    simple_expression    go to state 23
    identifier           go to state 24
    string               go to state 25


state 33

   13 function_definition: DEF identifier . OPEN_PAR args CLOSE_PAR statement

    OPEN_PAR  shift, and go to state 44


state 34

   15 args: args COMMA . identifier

    ID  shift, and go to state 12

    identifier  go to state 45


state 35

   21 equal_expression: expression EQUAL . assign_expression

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    assign_expression  go to state 46
    concat_expression  go to state 22
    simple_expression  go to state 23
    identifier         go to state 29
    string             go to state 25


state 36

    5 statement: expression END_STMT .

    $default  reduce using rule 5 (statement)


state 37

   25 concat_expression: concat_expression CONCAT . simple_expression

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    simple_expression  go to state 47
    identifier         go to state 48
    string             go to state 25


state 38

   23 assign_expression: identifier ASSIGN . assign_expression

    OPEN_PAR  shift, and go to state 9
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    assign_expression  go to state 49
    concat_expression  go to state 22
    simple_expression  go to state 23
    identifier         go to state 29
    string             go to state 25


state 39

   16 if_statement: IF OPEN_PAR expression . CLOSE_PAR statement optional_else_statement
   21 equal_expression: expression . EQUAL assign_expression

    EQUAL      shift, and go to state 35
    CLOSE_PAR  shift, and go to state 50


state 40

    6 statement: PRINT expression END_STMT .

    $default  reduce using rule 6 (statement)


state 41

    7 statement: INPUT identifier END_STMT .

    $default  reduce using rule 7 (statement)


state 42

   29 simple_expression: OPEN_PAR expression CLOSE_PAR .

    $default  reduce using rule 29 (simple_expression)


state 43

   19 compound_statement: BEGIN_CS statement_list END_CS .

    $default  reduce using rule 19 (compound_statement)


state 44

   13 function_definition: DEF identifier OPEN_PAR . args CLOSE_PAR statement

    ID  shift, and go to state 12

    args        go to state 51
    identifier  go to state 52


state 45

   15 args: args COMMA identifier .

    $default  reduce using rule 15 (args)


state 46

   21 equal_expression: expression EQUAL assign_expression .

    $default  reduce using rule 21 (equal_expression)


state 47

   25 concat_expression: concat_expression CONCAT simple_expression .

    $default  reduce using rule 25 (concat_expression)


state 48

   27 simple_expression: identifier .

    $default  reduce using rule 27 (simple_expression)


state 49

   23 assign_expression: identifier ASSIGN assign_expression .

    $default  reduce using rule 23 (assign_expression)


state 50

   16 if_statement: IF OPEN_PAR expression CLOSE_PAR . statement optional_else_statement

    error     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    INPUT     shift, and go to state 7
    END_STMT  shift, and go to state 8
    OPEN_PAR  shift, and go to state 9
    BEGIN_CS  shift, and go to state 10
    DEF       shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    statement            go to state 53
    function_definition  go to state 15
    args                 go to state 16
    if_statement         go to state 17
    compound_statement   go to state 18
    expression           go to state 19
    equal_expression     go to state 20
    assign_expression    go to state 21
    concat_expression    go to state 22
    simple_expression    go to state 23
    identifier           go to state 24
    string               go to state 25


state 51

   13 function_definition: DEF identifier OPEN_PAR args . CLOSE_PAR statement
   15 args: args . COMMA identifier

    CLOSE_PAR  shift, and go to state 54
    COMMA      shift, and go to state 34


state 52

   14 args: identifier .

    $default  reduce using rule 14 (args)


state 53

   16 if_statement: IF OPEN_PAR expression CLOSE_PAR statement . optional_else_statement

    ELSE  shift, and go to state 55

    ELSE      [reduce using rule 18 (optional_else_statement)]
    $default  reduce using rule 18 (optional_else_statement)

    optional_else_statement  go to state 56


state 54

   13 function_definition: DEF identifier OPEN_PAR args CLOSE_PAR . statement

    error     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    INPUT     shift, and go to state 7
    END_STMT  shift, and go to state 8
    OPEN_PAR  shift, and go to state 9
    BEGIN_CS  shift, and go to state 10
    DEF       shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    statement            go to state 57
    function_definition  go to state 15
    args                 go to state 16
    if_statement         go to state 17
    compound_statement   go to state 18
    expression           go to state 19
    equal_expression     go to state 20
    assign_expression    go to state 21
    concat_expression    go to state 22
    simple_expression    go to state 23
    identifier           go to state 24
    string               go to state 25


state 55

   17 optional_else_statement: ELSE . statement

    error     shift, and go to state 4
    IF        shift, and go to state 5
    PRINT     shift, and go to state 6
    INPUT     shift, and go to state 7
    END_STMT  shift, and go to state 8
    OPEN_PAR  shift, and go to state 9
    BEGIN_CS  shift, and go to state 10
    DEF       shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 13

    statement            go to state 58
    function_definition  go to state 15
    args                 go to state 16
    if_statement         go to state 17
    compound_statement   go to state 18
    expression           go to state 19
    equal_expression     go to state 20
    assign_expression    go to state 21
    concat_expression    go to state 22
    simple_expression    go to state 23
    identifier           go to state 24
    string               go to state 25


state 56

   16 if_statement: IF OPEN_PAR expression CLOSE_PAR statement optional_else_statement .

    $default  reduce using rule 16 (if_statement)


state 57

   13 function_definition: DEF identifier OPEN_PAR args CLOSE_PAR statement .

    $default  reduce using rule 13 (function_definition)


state 58

   17 optional_else_statement: ELSE statement .

    $default  reduce using rule 17 (optional_else_statement)
